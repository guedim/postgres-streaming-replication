Links:

- Postgres Streaming Replication
https://severalnines.com/blog/become-postgresql-dba-how-setup-streaming-replication-high-availability
https://www.howtoforge.com/tutorial/how-to-set-up-master-slave-replication-for-postgresql-96-on-ubuntu-1604/


- Docker hub
https://hub.docker.com/r/nebirhos/postgres-replication/
https://hub.docker.com/r/ucalgary/postgres-bw/

https://hub.docker.com/r/thirtyx/transicator-postgres/


Links CDC
https://www.simple.com/engineering/a-change-data-capture-pipeline-from-postgresql-to-kafka



- El mismo nivel de wal es necesario tanto en el maestro como en los standby
- Superuser is required
- No secuencias
- Replicación Lógica 9.6 (extensión pglogical) no es igula a 10.0
	- Si actualizamos a Postgres 10 toca ajustar proceso (no es tra)

9.6       --->   10(instance 1)    ---> 10(instance 2) 
pglogical        pglogical 
                 builtin                builtin 


	- PGLogical se mantendrá hasta EOL de Postgres 9.6
		https://www.postgresql.org/message-id/CAH%2BGA0o5B89eDJjoKO-yN%3DXQEsC%2BpA2n9LuQPun0EAz9fVcUEA%40mail.gmail.com


- Aún en 10 limitaciones con DDL
	- http://www.postgresql-archive.org/Dealing-with-logical-replication-td5971829.html



Con replicación lógica, se puede leer los wals con multiples herraientas incluso nativas de Postgres:
- https://www.postgresql.org/docs/9.6/static/logicaldecoding.html


Tipos de replicación:
https://www.postgresql.org/docs/current/static/different-replication-solutions.html


Opciones:
http://hibernate.org/orm/envers/



Tools:
EDB Adappters para datos de Postgres a otros sistemas (Postgres, mysql, hadoop)
https://www.enterprisedb.com/product/edb-postgres-platform/edb-postgres-data-adapters

JDBC para leer CDC
https://github.com/davecramer/presentations/blob/master/JDBC%20Performance%20Scale%2015x.pdf
https://github.com/davecramer/LogicalDecode
https://github.com/confluentinc/bottledwater-pg  (ELF  :(  unmaintained)

Plugin para conectarse con Kafka
http://debezium.io/

Leer los wals y pasarlos a Json
https://github.com/eulerto/wal2json

# Master DB
max_connections = 500
wal_level = hot_standby
wal_keep_segments = 256
max_wal_senders = 100
hot_standby = on


# Slave DB
max_connections = 500
wal_level = hot_standby
wal_keep_segments = 256
max_wal_senders = 100
hot_standby = on





